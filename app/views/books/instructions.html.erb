<style>
    body {
  font-family: Helvetica, arial, sans-serif;
  font-size: 14px;
  line-height: 1.6;
  padding-top: 10px;
  padding-bottom: 10px;
  background-color: white;
  padding: 30px; }

body > *:first-child {
  margin-top: 0 !important; }
body > *:last-child {
  margin-bottom: 0 !important; }

p {
  clear: both; }

a {
  color: #4183C4; }
a.absent {
  color: #cc0000; }
a.anchor {
  display: block;
  padding-left: 30px;
  margin-left: -30px;
  cursor: pointer;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0; }

h1, h2, h3, h4, h5, h6 {
  clear:both;
  margin: 20px 0 10px;
  padding: 0;
  font-weight: bold;
  -webkit-font-smoothing: antialiased;
  cursor: text;
  position: relative; }

h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor {
  background: url("../images/modules/styleguide/para.png") no-repeat 10px center;
  text-decoration: none; }

h1 tt, h1 code {
  font-size: inherit; }

h2 tt, h2 code {
  font-size: inherit; }

h3 tt, h3 code {
  font-size: inherit; }

h4 tt, h4 code {
  font-size: inherit; }

h5 tt, h5 code {
  font-size: inherit; }

h6 tt, h6 code {
  font-size: inherit; }

h1 {
  font-size: 28px;
  color: black; }

h2 {
  font-size: 24px;
  border-bottom: 1px solid #cccccc;
  color: black; }

h3 {
  font-size: 18px; }

h4 {
  font-size: 16px; }

h5 {
  font-size: 14px; }

h6 {
  color: #777777;
  font-size: 14px; }

p, blockquote, ul, ol, dl, li, table, pre {
  margin: 15px 0; }

hr {
  background: transparent url("../images/modules/pulls/dirty-shade.png") repeat-x 0 0;
  border: 0 none;
  color: #cccccc;
  height: 4px;
  padding: 0; }

body > h2:first-child {
  margin-top: 0;
  padding-top: 0; }
body > h1:first-child {
  margin-top: 0;
  padding-top: 0; }
  body > h1:first-child + h2 {
    margin-top: 0;
    padding-top: 0; }
body > h3:first-child, body > h4:first-child, body > h5:first-child, body > h6:first-child {
  margin-top: 0;
  padding-top: 0; }

a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 {
  margin-top: 0;
  padding-top: 0; }

h1 p, h2 p, h3 p, h4 p, h5 p, h6 p {
  margin-top: 0; }

li p.first {
  display: inline-block; }

ul, ol {
  padding-left: 30px; }

ul :first-child, ol :first-child {
  margin-top: 0; }

ul :last-child, ol :last-child {
  margin-bottom: 0; }

dl {
  padding: 0; }
  dl dt {
    font-size: 14px;
    font-weight: bold;
    font-style: italic;
    padding: 0;
    margin: 15px 0 5px; }
    dl dt:first-child {
      padding: 0; }
    dl dt > :first-child {
      margin-top: 0; }
    dl dt > :last-child {
      margin-bottom: 0; }
  dl dd {
    margin: 0 0 15px;
    padding: 0 15px; }
    dl dd > :first-child {
      margin-top: 0; }
    dl dd > :last-child {
      margin-bottom: 0; }

blockquote {
  border-left: 4px solid #dddddd;
  padding: 0 15px;
  color: #777777; }
  blockquote > :first-child {
    margin-top: 0; }
  blockquote > :last-child {
    margin-bottom: 0; }

table {
  padding: 0; }
  table tr {
    border-top: 1px solid #cccccc;
    background-color: white;
    margin: 0;
    padding: 0; }
    table tr:nth-child(2n) {
      background-color: #f8f8f8; }
    table tr th {
      font-weight: bold;
      border: 1px solid #cccccc;
      text-align: left;
      margin: 0;
      padding: 6px 13px; }
    table tr td {
      border: 1px solid #cccccc;
      text-align: left;
      margin: 0;
      padding: 6px 13px; }
    table tr th :first-child, table tr td :first-child {
      margin-top: 0; }
    table tr th :last-child, table tr td :last-child {
      margin-bottom: 0; }

img {
  max-width: 100%; }

span.frame {
  display: block;
  overflow: hidden; }
  span.frame > span {
    border: 1px solid #dddddd;
    display: block;
    float: left;
    overflow: hidden;
    margin: 13px 0 0;
    padding: 7px;
    width: auto; }
  span.frame span img {
    display: block;
    float: left; }
  span.frame span span {
    clear: both;
    color: #333333;
    display: block;
    padding: 5px 0 0; }
span.align-center {
  display: block;
  overflow: hidden;
  clear: both; }
  span.align-center > span {
    display: block;
    overflow: hidden;
    margin: 13px auto 0;
    text-align: center; }
  span.align-center span img {
    margin: 0 auto;
    text-align: center; }
span.align-right {
  display: block;
  overflow: hidden;
  clear: both; }
  span.align-right > span {
    display: block;
    overflow: hidden;
    margin: 13px 0 0;
    text-align: right; }
  span.align-right span img {
    margin: 0;
    text-align: right; }
span.float-left {
  display: block;
  margin-right: 13px;
  overflow: hidden;
  float: left; }
  span.float-left span {
    margin: 13px 0 0; }
span.float-right {
  display: block;
  margin-left: 13px;
  overflow: hidden;
  float: right; }
  span.float-right > span {
    display: block;
    overflow: hidden;
    margin: 13px auto 0;
    text-align: right; }

code, tt {
  margin: 0 2px;
  padding: 0 5px;
  white-space: nowrap;
  border: 1px solid #eaeaea;
  background-color: #f8f8f8;
  border-radius: 3px; }

pre code {
  margin: 0;
  padding: 0;
  white-space: pre;
  border: none;
  background: transparent; }

.highlight pre {
  background-color: #f8f8f8;
  border: 1px solid #cccccc;
  font-size: 13px;
  line-height: 19px;
  overflow: auto;
  padding: 6px 10px;
  border-radius: 3px; }

pre {
  background-color: #f8f8f8;
  border: 1px solid #cccccc;
  font-size: 13px;
  line-height: 19px;
  overflow: auto;
  padding: 6px 10px;
  border-radius: 3px; }
  pre code, pre tt {
    background-color: transparent;
    border: none; }

/* Localized */
</style>

<p>The goal of this exercise is to create a simple app that connects to a web server and performs a <code>GET</code>, a <code>POST</code>, and a <code>PUT</code>. You may use any 3rd party libraries and tools that you&#39;d like.</p>

<h3>Requirements</h3>

<ul>
<li>The app should utilize Swift 3 code (please do not use any previous versions of Swift). The majority of the codebase should be written in Swift.</li>
<li>The app should be iPhone 6+ compatible and use Auto Layout.</li>
<li>The app should run on iOS 9+.</li>
<li>You should include a README, that contains at least some implementation details (architecture, technical decisions explanation, etc.)</li>
<li>You should create a git repo (private is preferred) and invite your interviewer to it once created so we can better keep track of your progress.</li>
</ul>

<h3>Wireframes</h3>

<p style="width: 50%;"><%= image_tag 'screen-1.png', :height => '400', style: 'float:left;', align: 'right' %>
<strong>Screen 1:</strong>
This screen lists the books in the library. Pressing the <code>+</code> button brings you to the Add Book screen in a modal. Pressing an item in the table brings you to the Detail screen.</p>

<p style="width: 50%;"><br/>
<%= image_tag 'screen-2.png', :height => '400', style: 'float:left;' %>
<strong>Screen 2:</strong>
This screen provides detail about a book. Pressing the <code>Checkout</code> button asks you for your name, and will update the book entry to list your name and the current date for the <code>lastCheckedOut</code> and <code>lastCheckedOutBy</code> fields.<br/><br/>You can also share this book to Facebook or Twitter with the share button on the top right. This should use the built-in sharing dialogue.</p>

<p style="width: 50%;"><br/>
<%= image_tag 'screen-3.png', :height => '400', style: 'float:left;' %>
<strong>Screen 3:</strong>
This screen is a form to add a new book to the library. Title and author fields are required. If any of those is empty and <code>Submit</code> is pressed, an alert with an error message is shown. Pressing the <code>Done</code> button will close this screen. If there is text entered in any of the fields, it will confirm that the user wants to leave the screen with unsaved changes.</p>

<p><br/>
<strong>Notes and Other features:</strong></p>

<ul>
<li>The wireframes should be considered as guidelines / examples. Feel free to design the app the way you want, both on the UI and UX side</li>
<li>The app should allow users to create a book</li>
<li>The app should allow users to update a book information</li>
<li>The app should allow users to delete a specific book</li>
<li>The app should allow users to delete all books at once</li>
</ul>

<h3>Endpoints</h3>

<p>Server: <a href="index.html"><%= API_SERVER %></a></p>

<p>This server requires dates to be formatted like so: <code>yyyy-MM-dd HH:mm:ss zzz</code></p>

<p><strong>List all Library Books</strong></p>

<p><code>GET /books</code></p>

<p>Sample Response:</p>

<pre><code>Status 200 Ok
[
    {
        &quot;author&quot;: &quot;Ash Maurya&quot;,
        &quot;categories&quot;: &quot;process&quot;,
        &quot;id&quot;: 1,
        &quot;lastCheckedOut&quot;: null,
        &quot;lastCheckedOutBy&quot;: null,
        &quot;publisher&quot;: &quot;O&#39;REILLY&quot;,
        &quot;title&quot;: &quot;Running Lean&quot;,
    },
    {
        &quot;author&quot;: &quot;Jim Collins&quot;,
        &quot;categories&quot;: &quot;business&quot;,
        &quot;id&quot;: 2,
        &quot;lastCheckedOut&quot;: null,
        &quot;lastCheckedOutBy&quot;: null,
        &quot;publisher&quot;: &quot;HarperBusiness; 1 edition&quot;,
        &quot;title&quot;: &quot;Good to Great: Why Some Companies Make the Leap...And Others Don&#39;t&quot;,
    },
    {
        &quot;author&quot;: &quot;Perry Chua, Dann Ilicic&quot;,
        &quot;categories&quot;: &quot;design&quot;,
        &quot;id&quot;: 3,
        &quot;lastCheckedOut&quot;: null,
        &quot;lastCheckedOutBy&quot;: null,
        &quot;publisher&quot;: &quot;Quayside, 2008&quot;,
        &quot;title&quot;: &quot;Logo Savvy: Top Brand Design Firms Share Their Naming and Identity Strategies&quot;,
    }
]
</code></pre>

<p><strong>Add a Library Book</strong></p>

<p><code>POST /books</code></p>

<p>Sample Params:</p>

<pre><code>{
    &quot;author&quot;: &quot;Ash Maurya&quot;
    &quot;categories&quot;: &quot;process&quot;
    &quot;title&quot;: &quot;Running Lean&quot;
    &quot;publisher&quot;: &quot;O&#39;REILLY&quot;
}
</code></pre>

<p>Sample Response:</p>

<pre><code>Status 200 Ok
{
    &quot;author&quot;: &quot;Ash Maurya&quot;,
    &quot;categories&quot;: &quot;process&quot;,
    &quot;id&quot;: 42,
    &quot;lastCheckedOut&quot;: null,
    &quot;lastCheckedOutBy&quot;: null,
    &quot;publisher&quot;: &quot;O&#39;REILLY&quot;,
    &quot;title&quot;: &quot;Running Lean&quot;,
}
</code></pre>

<p><strong>Get a Library Book</strong></p>

<p><code>GET /books/1</code></p>

<p>Sample Response:</p>

<pre><code>Status 200 Ok
{
    &quot;author&quot;: &quot;Ash Maurya&quot;,
    &quot;categories&quot;: &quot;process&quot;,
    &quot;id&quot;: 1,
    &quot;lastCheckedOut&quot;: null,
    &quot;lastCheckedOutBy&quot;: null,
    &quot;publisher&quot;: &quot;O&#39;REILLY&quot;,
    &quot;title&quot;: &quot;Running Lean&quot;,
}
</code></pre>

<p><strong>Update a Library Book</strong></p>

<p><code>PUT /books/1</code></p>

<p>Sample Params:</p>

<pre><code>{
    &quot;lastCheckedOutBy&quot;: &quot;Prolific Pablo&quot;
}
</code></pre>

<p>Sample Response:</p>

<pre><code>Status 200 Ok
{
    &quot;author&quot;: &quot;Ash Maurya&quot;,
    &quot;categories&quot;: &quot;process&quot;,
    &quot;id&quot;: 1,
    &quot;lastCheckedOut&quot;: &quot;2014-10-1 19:16:11 EDT&quot;,
    &quot;lastCheckedOutBy&quot;: &quot;Prolific Pablo&quot;,
    &quot;publisher&quot;: &quot;O&#39;REILLY&quot;,
    &quot;title&quot;: &quot;Running Lean&quot;,
}
</code></pre>

<p><strong>Delete a Library Book</strong></p>

<p><code>DELETE /books/1</code></p>

<p>Response:</p>

<pre><code>Status 204 No Content
</code></pre>

<p><strong>Clear all Books</strong></p>

<p><code>DELETE /clean</code></p>

<p>Response:</p>

<pre><code>Status 200 Ok
</code></pre>